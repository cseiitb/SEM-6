program:
	declaration_list procedure_definition
;

declaration_list:
	procedure_declaration
|
	variable_declaration_list procedure_declaration
|
	procedure_declaration variable_declaration_list
;

procedure_declaration:
	VOID NAME '(' ')' ';'
;

procedure_definition:
	NAME '(' ')'
	'{' optional_variable_declaration_list statement_list '}'
;

optional_variable_declaration_list:
	/* empty */
|
	variable_declaration_list
;

variable_declaration_list:
	variable_declaration
|
	variable_declaration_list variable_declaration
;

variable_declaration:
	declaration ';'
;

declaration:
	INTEGER int_declaration_names_list
| 
	FLOAT float_declaration_names_list
;

int_declaration_names_list:
	NAME, int_declaration_names_list
|
	NAME
;

float_declaration_names_list:
	NAME, float_declaration_names_list
|
	NAME
;

statement_list:
|
	statement_list statement
;

statement:
	IF '(' bool_expression_term ')' statement
|
	matched_statement
;

matched_statement:
	IF '(' bool_expression_term ')' matched_statement ELSE matched_statement	
|
	other_than_selection_statement
;

other_than_selection_statement:
	assignment_statement
|
	iteration_statement
|
	'{' statement_list '}'
;	




iteration_statement:
	WHILE '(' bool_expression_term ')' statement
;






assignment_statement:
	variable ASSIGN arith_expression ';'
;

boolean_expression_term:
	boolean_expression
|
	relational_expression
|
	'(' boolean_expression_term ')'
;

boolean_expression:
	boolean_expression_term AND boolean_expression_term	
|
	boolean_expression_term OR boolean_expression_term	
|
	NOT boolean_expression_term 	
;

relational_expression:
	operand LE operand
|
	operand LT operand
|
	operand EQ operand
|
	operand NE operand
|
	operand GE operand
|
	operand GT operand
;
operand:
	arith_expression
;

arith_expression:
	operand '+' operand
|
	operand '-' operand
|
	operand '*' operand
|
	operand '/' operand
|
	'-' operand %prec UMINUS
|
	'(' operand ')'
|
	expression_term
|
	boolean_expression_term '?' operand ':' operand
;

expression_term:
	variable
|
	constant
;

variable:
	NAME
;

constant:
	INTEGER_NUMBER
|
	DOUBLE_NUMBER
;
